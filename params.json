{"name":"hs-service-benchmark-tool","tagline":"Tools for benchmarking services","body":"Usage\r\n=====\r\n\r\nBuild and install the tool with\r\n\r\n```.bash\r\ncabal install\r\n```\r\n\r\nFor a simple example, essentially benchmarking the tool itself, first build and\r\nrun the simple test server (from `main/Main.hs`)\r\n\r\n```.bash\r\nechos-service\r\n```\r\n\r\nand in another terminal run\r\n\r\n```.bash\r\nservice-benchmark-tool --thread-count=100 --action-count=1500 --url='http://localhost:8282/echo' --http-client=http-streams --loglevel=info\r\n```\r\n\r\nwhich will run 100 threads each making 1500 echo request to the echo-service\r\nusing the `http-streams` package as HTTP client backend and loglevel `info`.\r\n\r\nFor help you may type\r\n\r\n```.bash\r\nservice-benchmark-tool --help\r\n```\r\n\r\nThe option `-p` can be used to print out the configuration as a configuration file and\r\nreplay a that configuration:\r\n\r\n```.bash\r\nservice-benchmark-tool --thread-count=100 -p > config.yml\r\nservice-benchmark-tool --config-file=config.yml\r\n```\r\n\r\nInstallation\r\n============\r\n\r\nInstallation with Chart Support\r\n-------------------------------\r\n\r\nInstall chart-cairo:\r\n\r\n```.bash\r\ncabal install alex\r\ncabal install gtk2hs-buildtools\r\n```\r\n\r\nOn Mac OS X with homebrew you must do\r\n\r\n```.bash\r\nexport PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig:$PKG_CONFIG_PATH\r\n```\r\n\r\nand then\r\n\r\n```.bash\r\ncabal install chart-cairo\r\n```\r\n\r\nNow you can install the package with:\r\n\r\n```.bash\r\ncabal configure -fwith-chart\r\ncabal install\r\n```\r\n\r\nGHC-7.10\r\n--------\r\n\r\nFor compilation with GHC-7.10 one has to install the `HEAD` versions of\r\n`master` of `http-common` and `http-streams` from GitHub.\r\n\r\nA build with `-fwith-chart` is not yet supported. You may also have to\r\nexplicitely pass `-f-old-local`.\r\n\r\nScenarios\r\n=========\r\n\r\nWe are interested in scenarios like:\r\n\r\n> for 10000 enrolled users have each user login, read and email,\r\n> send an email, and log out with some delay, such that at\r\n> each time at about 1000 users are concurrently active.\r\n\r\nThis requires the following prerequesits:\r\n\r\n1.  a large enough pool of enrolled users,\r\n2.  for each user an email message (shall users share email message?), and\r\n3.  for each user reciepients (are the recipients users that participate in the test?),\r\n\r\nThere are different ways to implement this:\r\n\r\n1.  The email message for reading are pregenerated either\r\n\r\n    1. for each user, or\r\n    2. for groups of users,\r\n\r\n2.  Consecutive users read the emails that were written by previous users,\r\n\r\n3.  Users can be connected in different graphs, for instance as\r\n\r\n    1.  as sets of isolated connected components,\r\n    2.  as partial order,\r\n    3.  as tree, or\r\n    4.  as arbitrary graphs.\r\n\r\nProfiling\r\n=========\r\n\r\n```.bash\r\ncabal install --enable-profiling --ghc-option=-auto-all\r\n```\r\n\r\nThen run the program with `+RTS -prof` as show in this example:\r\n\r\n```.bash\r\n./dist/build/service-benchmark-tool/service-benchmark-tool --thread-count=50 --action-count=1000 --url='http://127.0.0.1:8282' --http-client=http-client --loglevel=info +RTS -prof -N8\r\n```\r\n\r\nNote that there is a bug in GHC that causes the flag `-N` without argument to\r\nhave no effect with the threaded runtime.\r\n\r\nThreadScope\r\n-----------\r\n\r\nIn order to collect event logs the application must be compiled with profiling\r\ndisabled:\r\n\r\n```.bash\r\ncabal install --constraint='http-client>=0.4.7' --ghc-option='-eventlog' --ghc-option='-rtsopts' --disable-profiling --disable-library-profiling\r\n```\r\n\r\nEventlogs can be obtained by running the application with +RTS -ls as show in\r\nthe following example:\r\n\r\n```.bash\r\n ./dist/build/service-benchmark-tool/service-benchmark-tool --thread-count=32 --action-count=1000 --url='http://127.0.0.1:8282' --http-client=http-client --loglevel=info -t 50000000  +RTS -ls -N8\r\n```\r\n\r\nThis will result in a file called `service-benchmark-tool.eventlog` in the\r\nworking directory. This file can be opend and analyzed with ThreadScope.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}